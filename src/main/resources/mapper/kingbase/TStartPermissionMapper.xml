<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.renfei.repository.dao.start.TStartPermissionMapper">
    <resultMap id="BaseResultMap" type="net.renfei.repository.dao.start.model.TStartPermission">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="resource_name" jdbcType="VARCHAR" property="resourceName"/>
        <result column="request_method" jdbcType="VARCHAR" property="requestMethod"/>
        <result column="resource_url" jdbcType="VARCHAR" property="resourceUrl"/>
        <result column="resource_type" jdbcType="VARCHAR" property="resourceType"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , create_time, update_time, is_deleted, uuid, resource_name, request_method,
    resource_url, resource_type
    </sql>
    <select id="selectByExample" parameterType="net.renfei.repository.dao.start.model.TStartPermissionExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from start_schema.t_start_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from start_schema.t_start_permission
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from start_schema.t_start_permission
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="net.renfei.repository.dao.start.model.TStartPermissionExample">
        delete from start_schema.t_start_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.renfei.repository.dao.start.model.TStartPermission">
        insert into start_schema.t_start_permission (id, create_time, update_time,
                                                     is_deleted, uuid, resource_name,
                                                     request_method, resource_url, resource_type)
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{isDeleted,jdbcType=BIT}, #{uuid,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR},
                #{requestMethod,jdbcType=VARCHAR}, #{resourceUrl,jdbcType=VARCHAR}, #{resourceType,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="net.renfei.repository.dao.start.model.TStartPermission">
        insert into start_schema.t_start_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="uuid != null">
                uuid,
            </if>
            <if test="resourceName != null">
                resource_name,
            </if>
            <if test="requestMethod != null">
                request_method,
            </if>
            <if test="resourceUrl != null">
                resource_url,
            </if>
            <if test="resourceType != null">
                resource_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="resourceName != null">
                #{resourceName,jdbcType=VARCHAR},
            </if>
            <if test="requestMethod != null">
                #{requestMethod,jdbcType=VARCHAR},
            </if>
            <if test="resourceUrl != null">
                #{resourceUrl,jdbcType=VARCHAR},
            </if>
            <if test="resourceType != null">
                #{resourceType,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.renfei.repository.dao.start.model.TStartPermissionExample"
            resultType="java.lang.Long">
        select count(*) from start_schema.t_start_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update start_schema.t_start_permission
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=BIT},
            </if>
            <if test="record.uuid != null">
                uuid = #{record.uuid,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceName != null">
                resource_name = #{record.resourceName,jdbcType=VARCHAR},
            </if>
            <if test="record.requestMethod != null">
                request_method = #{record.requestMethod,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceUrl != null">
                resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceType != null">
                resource_type = #{record.resourceType,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update start_schema.t_start_permission
        set id = #{record.id,jdbcType=BIGINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        is_deleted = #{record.isDeleted,jdbcType=BIT},
        uuid = #{record.uuid,jdbcType=VARCHAR},
        resource_name = #{record.resourceName,jdbcType=VARCHAR},
        request_method = #{record.requestMethod,jdbcType=VARCHAR},
        resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
        resource_type = #{record.resourceType,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.renfei.repository.dao.start.model.TStartPermission">
        update start_schema.t_start_permission
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
            <if test="uuid != null">
                uuid = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="resourceName != null">
                resource_name = #{resourceName,jdbcType=VARCHAR},
            </if>
            <if test="requestMethod != null">
                request_method = #{requestMethod,jdbcType=VARCHAR},
            </if>
            <if test="resourceUrl != null">
                resource_url = #{resourceUrl,jdbcType=VARCHAR},
            </if>
            <if test="resourceType != null">
                resource_type = #{resourceType,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.renfei.repository.dao.start.model.TStartPermission">
        update start_schema.t_start_permission
        set create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_time    = #{updateTime,jdbcType=TIMESTAMP},
            is_deleted     = #{isDeleted,jdbcType=BIT},
            uuid           = #{uuid,jdbcType=VARCHAR},
            resource_name  = #{resourceName,jdbcType=VARCHAR},
            request_method = #{requestMethod,jdbcType=VARCHAR},
            resource_url   = #{resourceUrl,jdbcType=VARCHAR},
            resource_type  = #{resourceType,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>