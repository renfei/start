<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.renfei.repository.dao.cms.TCmsCommentsMapper">
    <resultMap id="BaseResultMap" type="net.renfei.repository.dao.cms.model.TCmsComments">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="target_id" jdbcType="BIGINT" property="targetId"/>
        <result column="addtime" jdbcType="TIMESTAMP" property="addtime"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="is_owner" jdbcType="BIT" property="isOwner"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="net.renfei.repository.dao.cms.model.TCmsCommentsWithBLOBs">
        <result column="author" jdbcType="LONGVARCHAR" property="author"/>
        <result column="author_email" jdbcType="LONGVARCHAR" property="authorEmail"/>
        <result column="author_url" jdbcType="LONGVARCHAR" property="authorUrl"/>
        <result column="author_IP" jdbcType="LONGVARCHAR" property="authorIp"/>
        <result column="author_address" jdbcType="LONGVARCHAR" property="authorAddress"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        'id'
        , 'target_id', 'addtime', 'is_delete', 'parent_id', 'is_owner'
    </sql>
    <sql id="Blob_Column_List">
        'author'
        , 'author_email', 'author_url', 'author_IP', 'author_address', 'content'
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="net.renfei.repository.dao.cms.model.TCmsCommentsExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from start_schema.t_cms_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="net.renfei.repository.dao.cms.model.TCmsCommentsExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from start_schema.t_cms_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from start_schema.t_cms_comments
        where 'id' = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from start_schema.t_cms_comments
        where 'id' = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="net.renfei.repository.dao.cms.model.TCmsCommentsExample">
        delete from start_schema.t_cms_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.renfei.repository.dao.cms.model.TCmsCommentsWithBLOBs">
        insert into start_schema.t_cms_comments ('id', 'target_id', 'addtime',
            'is_delete', 'parent_id', 'is_owner',
            'author', 'author_email', 'author_url',
            'author_IP', 'author_address', 'content')
        values (#{id,jdbcType=BIGINT}, #{targetId,jdbcType=BIGINT}, #{addtime,jdbcType=TIMESTAMP},
                #{isDelete,jdbcType=BIT}, #{parentId,jdbcType=BIGINT}, #{isOwner,jdbcType=BIT},
                #{author,jdbcType=LONGVARCHAR}, #{authorEmail,jdbcType=LONGVARCHAR}, #{authorUrl,jdbcType=LONGVARCHAR},
                #{authorIp,jdbcType=LONGVARCHAR}, #{authorAddress,jdbcType=LONGVARCHAR},
                #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="net.renfei.repository.dao.cms.model.TCmsCommentsWithBLOBs">
        insert into start_schema.t_cms_comments
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                'id',
            </if>
            <if test="targetId != null">
                'target_id',
            </if>
            <if test="addtime != null">
                'addtime',
            </if>
            <if test="isDelete != null">
                'is_delete',
            </if>
            <if test="parentId != null">
                'parent_id',
            </if>
            <if test="isOwner != null">
                'is_owner',
            </if>
            <if test="author != null">
                'author',
            </if>
            <if test="authorEmail != null">
                'author_email',
            </if>
            <if test="authorUrl != null">
                'author_url',
            </if>
            <if test="authorIp != null">
                'author_IP',
            </if>
            <if test="authorAddress != null">
                'author_address',
            </if>
            <if test="content != null">
                'content',
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="targetId != null">
                #{targetId,jdbcType=BIGINT},
            </if>
            <if test="addtime != null">
                #{addtime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="isOwner != null">
                #{isOwner,jdbcType=BIT},
            </if>
            <if test="author != null">
                #{author,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorEmail != null">
                #{authorEmail,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorUrl != null">
                #{authorUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorIp != null">
                #{authorIp,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorAddress != null">
                #{authorAddress,jdbcType=LONGVARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.renfei.repository.dao.cms.model.TCmsCommentsExample"
            resultType="java.lang.Long">
        select count(*) from start_schema.t_cms_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update start_schema.t_cms_comments
        <set>
            <if test="record.id != null">
                'id' = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.targetId != null">
                'target_id' = #{record.targetId,jdbcType=BIGINT},
            </if>
            <if test="record.addtime != null">
                'addtime' = #{record.addtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDelete != null">
                'is_delete' = #{record.isDelete,jdbcType=BIT},
            </if>
            <if test="record.parentId != null">
                'parent_id' = #{record.parentId,jdbcType=BIGINT},
            </if>
            <if test="record.isOwner != null">
                'is_owner' = #{record.isOwner,jdbcType=BIT},
            </if>
            <if test="record.author != null">
                'author' = #{record.author,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.authorEmail != null">
                'author_email' = #{record.authorEmail,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.authorUrl != null">
                'author_url' = #{record.authorUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.authorIp != null">
                'author_IP' = #{record.authorIp,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.authorAddress != null">
                'author_address' = #{record.authorAddress,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.content != null">
                'content' = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update start_schema.t_cms_comments
        set 'id' = #{record.id,jdbcType=BIGINT},
        'target_id' = #{record.targetId,jdbcType=BIGINT},
        'addtime' = #{record.addtime,jdbcType=TIMESTAMP},
        'is_delete' = #{record.isDelete,jdbcType=BIT},
        'parent_id' = #{record.parentId,jdbcType=BIGINT},
        'is_owner' = #{record.isOwner,jdbcType=BIT},
        'author' = #{record.author,jdbcType=LONGVARCHAR},
        'author_email' = #{record.authorEmail,jdbcType=LONGVARCHAR},
        'author_url' = #{record.authorUrl,jdbcType=LONGVARCHAR},
        'author_IP' = #{record.authorIp,jdbcType=LONGVARCHAR},
        'author_address' = #{record.authorAddress,jdbcType=LONGVARCHAR},
        'content' = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update start_schema.t_cms_comments
        set 'id' = #{record.id,jdbcType=BIGINT},
        'target_id' = #{record.targetId,jdbcType=BIGINT},
        'addtime' = #{record.addtime,jdbcType=TIMESTAMP},
        'is_delete' = #{record.isDelete,jdbcType=BIT},
        'parent_id' = #{record.parentId,jdbcType=BIGINT},
        'is_owner' = #{record.isOwner,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.renfei.repository.dao.cms.model.TCmsCommentsWithBLOBs">
        update start_schema.t_cms_comments
        <set>
            <if test="targetId != null">
                'target_id' = #{targetId,jdbcType=BIGINT},
            </if>
            <if test="addtime != null">
                'addtime' = #{addtime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                'is_delete' = #{isDelete,jdbcType=BIT},
            </if>
            <if test="parentId != null">
                'parent_id' = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="isOwner != null">
                'is_owner' = #{isOwner,jdbcType=BIT},
            </if>
            <if test="author != null">
                'author' = #{author,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorEmail != null">
                'author_email' = #{authorEmail,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorUrl != null">
                'author_url' = #{authorUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorIp != null">
                'author_IP' = #{authorIp,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorAddress != null">
                'author_address' = #{authorAddress,jdbcType=LONGVARCHAR},
            </if>
            <if test="content != null">
                'content' = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where 'id' = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.renfei.repository.dao.cms.model.TCmsCommentsWithBLOBs">
        update start_schema.t_cms_comments
        set 'target_id' = #{targetId,jdbcType=BIGINT},
            'addtime' = #{addtime,jdbcType=TIMESTAMP},
            'is_delete' = #{isDelete,jdbcType=BIT},
            'parent_id' = #{parentId,jdbcType=BIGINT},
            'is_owner' = #{isOwner,jdbcType=BIT},
            'author' = #{author,jdbcType=LONGVARCHAR},
            'author_email' = #{authorEmail,jdbcType=LONGVARCHAR},
            'author_url' = #{authorUrl,jdbcType=LONGVARCHAR},
            'author_IP' = #{authorIp,jdbcType=LONGVARCHAR},
            'author_address' = #{authorAddress,jdbcType=LONGVARCHAR},
            'content' = #{content,jdbcType=LONGVARCHAR}
        where 'id' = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.renfei.repository.dao.cms.model.TCmsComments">
        update start_schema.t_cms_comments
        set 'target_id' = #{targetId,jdbcType=BIGINT},
            'addtime' = #{addtime,jdbcType=TIMESTAMP},
            'is_delete' = #{isDelete,jdbcType=BIT},
            'parent_id' = #{parentId,jdbcType=BIGINT},
            'is_owner' = #{isOwner,jdbcType=BIT}
        where 'id' = #{id,jdbcType=BIGINT}
    </update>
</mapper>