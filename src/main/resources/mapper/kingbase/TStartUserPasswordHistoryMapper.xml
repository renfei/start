<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.renfei.repository.dao.start.TStartUserPasswordHistoryMapper">
    <resultMap id="BaseResultMap" type="net.renfei.repository.dao.start.model.TStartUserPasswordHistory">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="set_time" jdbcType="TIMESTAMP" property="setTime"/>
        <result column="set_user_id" jdbcType="BIGINT" property="setUserId"/>
        <result column="set_user_name" jdbcType="VARCHAR" property="setUserName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        'id'
        , 'user_id', 'password', 'set_time', 'set_user_id', 'set_user_name'
    </sql>
    <select id="selectByExample" parameterType="net.renfei.repository.dao.start.model.TStartUserPasswordHistoryExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from start_schema.t_start_user_password_history
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from start_schema.t_start_user_password_history
        where 'id' = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from start_schema.t_start_user_password_history
        where 'id' = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="net.renfei.repository.dao.start.model.TStartUserPasswordHistoryExample">
        delete from start_schema.t_start_user_password_history
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.renfei.repository.dao.start.model.TStartUserPasswordHistory">
        insert into start_schema.t_start_user_password_history ('id', 'user_id', 'password',
            'set_time', 'set_user_id', 'set_user_name')
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR},
                #{setTime,jdbcType=TIMESTAMP}, #{setUserId,jdbcType=BIGINT}, #{setUserName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="net.renfei.repository.dao.start.model.TStartUserPasswordHistory">
        insert into start_schema.t_start_user_password_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                'id',
            </if>
            <if test="userId != null">
                'user_id',
            </if>
            <if test="password != null">
                'password',
            </if>
            <if test="setTime != null">
                'set_time',
            </if>
            <if test="setUserId != null">
                'set_user_id',
            </if>
            <if test="setUserName != null">
                'set_user_name',
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="setTime != null">
                #{setTime,jdbcType=TIMESTAMP},
            </if>
            <if test="setUserId != null">
                #{setUserId,jdbcType=BIGINT},
            </if>
            <if test="setUserName != null">
                #{setUserName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.renfei.repository.dao.start.model.TStartUserPasswordHistoryExample"
            resultType="java.lang.Long">
        select count(*) from start_schema.t_start_user_password_history
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update start_schema.t_start_user_password_history
        <set>
            <if test="record.id != null">
                'id' = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                'user_id' = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.password != null">
                'password' = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.setTime != null">
                'set_time' = #{record.setTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.setUserId != null">
                'set_user_id' = #{record.setUserId,jdbcType=BIGINT},
            </if>
            <if test="record.setUserName != null">
                'set_user_name' = #{record.setUserName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update start_schema.t_start_user_password_history
        set 'id' = #{record.id,jdbcType=BIGINT},
        'user_id' = #{record.userId,jdbcType=BIGINT},
        'password' = #{record.password,jdbcType=VARCHAR},
        'set_time' = #{record.setTime,jdbcType=TIMESTAMP},
        'set_user_id' = #{record.setUserId,jdbcType=BIGINT},
        'set_user_name' = #{record.setUserName,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="net.renfei.repository.dao.start.model.TStartUserPasswordHistory">
        update start_schema.t_start_user_password_history
        <set>
            <if test="userId != null">
                'user_id' = #{userId,jdbcType=BIGINT},
            </if>
            <if test="password != null">
                'password' = #{password,jdbcType=VARCHAR},
            </if>
            <if test="setTime != null">
                'set_time' = #{setTime,jdbcType=TIMESTAMP},
            </if>
            <if test="setUserId != null">
                'set_user_id' = #{setUserId,jdbcType=BIGINT},
            </if>
            <if test="setUserName != null">
                'set_user_name' = #{setUserName,jdbcType=VARCHAR},
            </if>
        </set>
        where 'id' = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.renfei.repository.dao.start.model.TStartUserPasswordHistory">
        update start_schema.t_start_user_password_history
        set 'user_id' = #{userId,jdbcType=BIGINT},
            'password' = #{password,jdbcType=VARCHAR},
            'set_time' = #{setTime,jdbcType=TIMESTAMP},
            'set_user_id' = #{setUserId,jdbcType=BIGINT},
            'set_user_name' = #{setUserName,jdbcType=VARCHAR}
        where 'id' = #{id,jdbcType=BIGINT}
    </update>
</mapper>