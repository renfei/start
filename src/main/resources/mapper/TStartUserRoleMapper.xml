<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.renfei.repository.dao.start.TStartUserRoleMapper">
    <resultMap id="BaseResultMap" type="net.renfei.repository.dao.start.model.TStartUserRole">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="user_uuid" jdbcType="VARCHAR" property="userUuid"/>
        <result column="role_uuid" jdbcType="VARCHAR" property="roleUuid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `id`
        , `create_time`, `update_time`, `is_deleted`, `uuid`, `user_uuid`, `role_uuid`
    </sql>
    <select id="selectByExample" parameterType="net.renfei.repository.dao.start.model.TStartUserRoleExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_start_user_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_start_user_role
        where `id` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_start_user_role
        where `id` = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="net.renfei.repository.dao.start.model.TStartUserRoleExample">
        delete from t_start_user_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.renfei.repository.dao.start.model.TStartUserRole">
        insert into t_start_user_role (`id`, `create_time`, `update_time`,
                                       `is_deleted`, `uuid`, `user_uuid`,
                                       `role_uuid`)
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{isDeleted,jdbcType=BIT}, #{uuid,jdbcType=VARCHAR}, #{userUuid,jdbcType=VARCHAR},
                #{roleUuid,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="net.renfei.repository.dao.start.model.TStartUserRole">
        insert into t_start_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="createTime != null">
                `create_time`,
            </if>
            <if test="updateTime != null">
                `update_time`,
            </if>
            <if test="isDeleted != null">
                `is_deleted`,
            </if>
            <if test="uuid != null">
                `uuid`,
            </if>
            <if test="userUuid != null">
                `user_uuid`,
            </if>
            <if test="roleUuid != null">
                `role_uuid`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="userUuid != null">
                #{userUuid,jdbcType=VARCHAR},
            </if>
            <if test="roleUuid != null">
                #{roleUuid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.renfei.repository.dao.start.model.TStartUserRoleExample"
            resultType="java.lang.Long">
        select count(*) from t_start_user_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_start_user_role
        <set>
            <if test="record.id != null">
                `id` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDeleted != null">
                `is_deleted` = #{record.isDeleted,jdbcType=BIT},
            </if>
            <if test="record.uuid != null">
                `uuid` = #{record.uuid,jdbcType=VARCHAR},
            </if>
            <if test="record.userUuid != null">
                `user_uuid` = #{record.userUuid,jdbcType=VARCHAR},
            </if>
            <if test="record.roleUuid != null">
                `role_uuid` = #{record.roleUuid,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_start_user_role
        set `id` = #{record.id,jdbcType=BIGINT},
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
        `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
        `is_deleted` = #{record.isDeleted,jdbcType=BIT},
        `uuid` = #{record.uuid,jdbcType=VARCHAR},
        `user_uuid` = #{record.userUuid,jdbcType=VARCHAR},
        `role_uuid` = #{record.roleUuid,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.renfei.repository.dao.start.model.TStartUserRole">
        update t_start_user_role
        <set>
            <if test="createTime != null">
                `create_time` = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                `is_deleted` = #{isDeleted,jdbcType=BIT},
            </if>
            <if test="uuid != null">
                `uuid` = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="userUuid != null">
                `user_uuid` = #{userUuid,jdbcType=VARCHAR},
            </if>
            <if test="roleUuid != null">
                `role_uuid` = #{roleUuid,jdbcType=VARCHAR},
            </if>
        </set>
        where `id` = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.renfei.repository.dao.start.model.TStartUserRole">
        update t_start_user_role
        set `create_time` = #{createTime,jdbcType=TIMESTAMP},
            `update_time` = #{updateTime,jdbcType=TIMESTAMP},
            `is_deleted`  = #{isDeleted,jdbcType=BIT},
            `uuid`        = #{uuid,jdbcType=VARCHAR},
            `user_uuid`   = #{userUuid,jdbcType=VARCHAR},
            `role_uuid`   = #{roleUuid,jdbcType=VARCHAR}
        where `id` = #{id,jdbcType=BIGINT}
    </update>
</mapper>