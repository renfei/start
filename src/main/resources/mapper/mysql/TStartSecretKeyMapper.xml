<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.renfei.repository.dao.start.TStartSecretKeyMapper">
  <resultMap id="BaseResultMap" type="net.renfei.repository.dao.start.model.TStartSecretKey">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
    <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
             type="net.renfei.repository.dao.start.model.TStartSecretKeyWithBLOBs">
    <result column="public_key" jdbcType="LONGVARCHAR" property="publicKey"/>
    <result column="private_key" jdbcType="LONGVARCHAR" property="privateKey"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`
    , `create_time`, `update_time`, `is_deleted`, `uuid`
  </sql>
  <sql id="Blob_Column_List">
    `public_key`
    , `private_key`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.renfei.repository.dao.start.model.TStartSecretKeyExample"
          resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from t_start_secret_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.renfei.repository.dao.start.model.TStartSecretKeyExample"
          resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from t_start_secret_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from t_start_secret_key
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete
    from t_start_secret_key
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.renfei.repository.dao.start.model.TStartSecretKeyExample">
    delete from t_start_secret_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="net.renfei.repository.dao.start.model.TStartSecretKeyWithBLOBs">
    insert into t_start_secret_key (`id`, `create_time`, `update_time`,
                                    `is_deleted`, `uuid`, `public_key`,
                                    `private_key`)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
            #{isDeleted,jdbcType=BIT}, #{uuid,jdbcType=VARCHAR}, #{publicKey,jdbcType=LONGVARCHAR},
            #{privateKey,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.renfei.repository.dao.start.model.TStartSecretKeyWithBLOBs">
    insert into t_start_secret_key
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="updateTime != null">
        `update_time`,
      </if>
      <if test="isDeleted != null">
        `is_deleted`,
      </if>
      <if test="uuid != null">
        `uuid`,
      </if>
      <if test="publicKey != null">
        `public_key`,
      </if>
      <if test="privateKey != null">
        `private_key`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null">
        #{publicKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="privateKey != null">
        #{privateKey,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.renfei.repository.dao.start.model.TStartSecretKeyExample"
          resultType="java.lang.Long">
    select count(*) from t_start_secret_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_start_secret_key
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        `is_deleted` = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.uuid != null">
        `uuid` = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.publicKey != null">
        `public_key` = #{record.publicKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.privateKey != null">
        `private_key` = #{record.privateKey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_start_secret_key
    set `id` = #{record.id,jdbcType=BIGINT},
    `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
    `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
    `is_deleted` = #{record.isDeleted,jdbcType=BIT},
    `uuid` = #{record.uuid,jdbcType=VARCHAR},
    `public_key` = #{record.publicKey,jdbcType=LONGVARCHAR},
    `private_key` = #{record.privateKey,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_start_secret_key
    set `id` = #{record.id,jdbcType=BIGINT},
    `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
    `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
    `is_deleted` = #{record.isDeleted,jdbcType=BIT},
    `uuid` = #{record.uuid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective"
          parameterType="net.renfei.repository.dao.start.model.TStartSecretKeyWithBLOBs">
    update t_start_secret_key
    <set>
      <if test="createTime != null">
        `create_time` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        `is_deleted` = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="uuid != null">
        `uuid` = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null">
        `public_key` = #{publicKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="privateKey != null">
        `private_key` = #{privateKey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs"
          parameterType="net.renfei.repository.dao.start.model.TStartSecretKeyWithBLOBs">
    update t_start_secret_key
    set `create_time` = #{createTime,jdbcType=TIMESTAMP},
        `update_time` = #{updateTime,jdbcType=TIMESTAMP},
        `is_deleted`  = #{isDeleted,jdbcType=BIT},
        `uuid`        = #{uuid,jdbcType=VARCHAR},
        `public_key`  = #{publicKey,jdbcType=LONGVARCHAR},
        `private_key` = #{privateKey,jdbcType=LONGVARCHAR}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.renfei.repository.dao.start.model.TStartSecretKey">
    update t_start_secret_key
    set `create_time` = #{createTime,jdbcType=TIMESTAMP},
        `update_time` = #{updateTime,jdbcType=TIMESTAMP},
        `is_deleted`  = #{isDeleted,jdbcType=BIT},
        `uuid`        = #{uuid,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>